// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResticManager.Testing.Data;

#nullable disable

namespace ResticManager.Testing.Migrations
{
    [DbContext(typeof(ResticContext))]
    partial class ResticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ResticManager.Testing.Data.ResticRepository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompressionProgress")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CompressionRatio")
                        .HasColumnType("REAL");

                    b.Property<double>("CompressionSpaceSaving")
                        .HasColumnType("REAL");

                    b.Property<double>("DeduplicationRatio")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("KeyCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SnapshotCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TotalBlobCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalCompressedSize")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalFileCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalOriginSize")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalUncompressedSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("ResticManager.Testing.Data.ResticSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompressionProgress")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CompressionRatio")
                        .HasColumnType("REAL");

                    b.Property<double>("CompressionSpaceSaving")
                        .HasColumnType("REAL");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hostname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Original")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Paths")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgramVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortGuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<long>("TotalBlobCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalCompressedSize")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalFileCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalOriginSize")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalUncompressedSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ResticSnapshots");
                });
#pragma warning restore 612, 618
        }
    }
}
